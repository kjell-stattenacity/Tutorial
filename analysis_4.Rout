
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # The analysis_#.R files have roughly the same format. To see code comments, 
> # take a look at analysis_1.R
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ recipes      1.0.8
✔ dials        1.2.0     ✔ rsample      1.2.0
✔ dplyr        1.1.3     ✔ tibble       3.2.1
✔ ggplot2      3.4.3     ✔ tidyr        1.3.0
✔ infer        1.0.5     ✔ tune         1.1.2
✔ modeldata    1.2.0     ✔ workflows    1.1.3
✔ parsnip      1.1.1     ✔ workflowsets 1.0.1
✔ purrr        1.0.2     ✔ yardstick    1.2.0
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(plsmod)
> library(rules)

Attaching package: ‘rules’

The following object is masked from ‘package:dials’:

    max_rules

> library(sfd) # topepo/sfd
> library(doMC)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> # ------------------------------------------------------------------------------
> # Set some options
> 
> tidymodels_prefer()
> theme_set(theme_bw())
> options(pillar.advice = FALSE, pillar.min_title_chars = Inf)
> registerDoMC(cores = parallel::detectCores())
> 
> # ------------------------------------------------------------------------------
> # Load all processed data configurations
> 
> load("RData/processed_data.RData")
> load("RData/data_wide.RData")
> 
> # ------------------------------------------------------------------------------
> # Analysis of pre-processor 4: diffs = 2, poly = 2, window = 49
> 
> preproc_4 <- tibble(differentiation_order = 2, polynomial_order = 2, window_size = 49)
> 
> data_4 <- 
+   processed_data %>% 
+   inner_join(preproc_4, by = c("differentiation_order", "polynomial_order", "window_size")) %>% 
+   select(-differentiation_order, -polynomial_order, -window_size)
> 
> set.seed(910)
> split_4 <- initial_split(data_4, strata = concentration, prop = 0.77)
Warning message:
The number of observations in each quantile is below the recommended threshold of 20.
• Stratification will use 3 breaks instead. 
> train_4 <- training(split_4)
> test_4  <- testing(split_4)
> 
> set.seed(522)
> folds_4 <- vfold_cv(train_4, v = 10, repeats = 5)
> 
> base_rec_4 <- 
+   recipe(concentration ~ ., data = train_4) %>% 
+   # For some larger values of window_size, there are columns with all missing
+   # predictor values; let's remove those by determining that they have a single
+   # unique value
+   step_zv(all_predictors()) %>% 
+   # We'll keep the sample ID in the data but not treat it as a predictor
+   update_role(sample_id, new_role = "sample_id")
> 
> # ------------------------------------------------------------------------------
> # Setup some options
> 
> grid_ctrl <- 
+   control_grid(save_pred = TRUE,  # Save the hold-out predictions
+                parallel_over = "everything")
> 
> bayes_ctrl <- control_bayes(save_pred = TRUE, no_improve = Inf)
> 
> # ------------------------------------------------------------------------------
> # Partial least squares analysis
> 
> norm_rec_4 <- 
+   base_rec_4 %>% 
+   step_normalize(starts_with("x"))
> 
> pls_spec <- pls(num_comp = tune()) %>% set_mode("regression")
> 
> pls_wflow_4 <- 
+   workflow() %>% 
+   add_recipe(norm_rec_4) %>% 
+   add_model(pls_spec)
> 
> pls_tune_4 <-
+   tune_grid(pls_wflow_4,
+             resamples = folds_4, 
+             grid = tibble(num_comp = 1:25),
+             control = grid_ctrl)
> 
> pls_metrics_4 <- 
+   collect_metrics(pls_tune_4) %>% 
+   cbind(preproc_4) %>% 
+   as_tibble()
> 
> pls_pred_4 <- 
+   collect_predictions(pls_tune_4, summarize = TRUE) %>% 
+   cbind(preproc_4) %>% 
+   as_tibble() %>% 
+   inner_join(
+     train_4 %>% add_rowindex() %>% select(.row, sample_id),
+     by = ".row"
+   ) %>% 
+   select(-.row)
Error in select(., -.row) : unused argument (-.row)
Calls: %>%
Execution halted
